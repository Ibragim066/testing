(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");if(r.length)for(var i=r.length-1;i>-1&&!e;)e=r[i--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();class e{constructor(t){if(!(t instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=t,this.cards=[{type:"American Express",number:"371449635398431"},{type:"Diners Club",number:"30569309025904"},{type:"Discover",number:"6011111111111117"},{type:"Мир",number:"2200123456789001"},{type:"MasterCard",number:"5555555555554444"},{type:"Visa",number:"4111111111111111"}]}bindToDOM(){this.container.innerHTML=this.markup}get markup(){return`\n      <div class='table-examples'>\n        <h3>Example credit card numbers</h3>\n        <table class="table table-bordered">\n          <thead>\n            <tr>\n              <th>Credit Card Type</th>\n              <th>Credit Card Number</th>\n            </tr>\n          </thead>\n          <tbody>\n            ${this.cards.map((t=>`\n              <tr>\n                <td>${t.type}</td>\n                <td>${t.number}</td>\n              </tr>\n            `)).join("")}\n          </tbody>\n        </table>\n      </div>\n    `}}class n{constructor(t){if(!(t instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=t,this.onSubmit=this.onSubmit.bind(this),this.onInputChange=this.onInputChange.bind(this)}bindToDOM(){this.container.innerHTML=n.markup;const{selector:t,messageSelector:e,submitSelector:r,inputSelector:i}=n;this.element=this.container.querySelector(t),this.message=this.element.querySelector(e),this.submit=this.element.querySelector(r),this.input=this.element.querySelector(i),this.element.addEventListener("submit",this.onSubmit),this.input.addEventListener("input",this.onInputChange)}onSubmit(t){t.preventDefault();const e=function(t){const e=`${t}`;let n=0,r=!1;for(let t=e.length-1;t>=0;t-=1){let i=parseInt(e.charAt(t),10);r&&(i*=2)>9&&(i-=9),n+=i,r=!r}return n%10==0}(this.input.value);if(this.input.classList.toggle("valid",e),this.input.classList.toggle("invalid",!e),e){const t=function(t){let e="no-found";const n=String(t);return/^4[0-9]{12}(?:[0-9]{3})?$/.test(n)&&(e="visa"),/^(5[1-5]|222[1-9]|22[3-9]|2[3-6]|27[01]|2720)[0-9]{0,}$/.test(n)&&(e="master"),/^220(0|4)[0-9]{12}$/.test(n)&&(e="mir"),/^65[4-9][0-9]{13}|64[4-9][0-9]{13}|6011[0-9]{12}|(622(?:12[6-9]|1[3-9][0-9]|[2-8][0-9][0-9]|9[01][0-9]|92[0-5])[0-9]{10})$/.test(n)&&(e="discover"),/^3[47][0-9]{13}$/.test(n)&&(e="amex"),/^3(?:0[0-5]|[68][0-9])[0-9]{11}$/.test(n)&&(e="diners_club"),e}(this.input.value),e=document.querySelector(`.${t}`);e?e.classList.add("card-active"):this.showMessage()}}onInputChange(){this.input.classList.remove("invalid","valid");const t=document.querySelector(".card-active");t&&t.classList.remove("card-active"),this.hideMessage()}showMessage(){this.message.classList.remove("hidden")}hideMessage(){this.message.classList.add("hidden")}static get markup(){return'\n      <form id="form" class="form">\n          <div class="form-group">\n              <input class="form-control" id="card_number" name="card_number" type="text" placeholder="Credit card number" data-original-title="" title="">\n          </div>\n          <div class=\'button-wrapper\'>\n            <button class="submit">Click to Validate</button>\n          </div> \n          <span class="message hidden">Упсс! Платежной системы нет в базе</span>\n      </form>\n    '}static get selector(){return".form"}static get messageSelector(){return".message"}static get submitSelector(){return".submit"}static get inputSelector(){return".form-control"}}const r=t.p+"img/visa_electron_curved.png",i=t.p+"img/mastercard_curved.png",s=t.p+"img/credit_card_amex.png",a=t.p+"img/discover_straight_32px.png",c=t.p+"img/mir_card.png",o=t.p+"img/diners_club_card.png";class l{constructor(t){if(!(t instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=t,this.cards=[{class:"visa",title:"Visa",url:r},{class:"master",title:"Mastercard",url:i},{class:"amex",title:"American Express",url:s},{class:"discover",title:"Discover",url:a},{class:"mir",title:"Mir",url:c},{class:"diners_club",title:"Diners Club",url:o}]}bindToDOM(){this.container.innerHTML=this.markup}get markup(){return`\n      <div class="cards">\n        ${this.cards.map((t=>`\n        <div>\n          <img class="card ${t.class}" src=${t.url} alt="${t.title}">\n        </div>  \n        `)).join("")}\n      </div>\n    `}}class d{constructor(t){if(!(t instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=t}bindToDOM(){this.container.innerHTML=d.markup,this.element=this.container.querySelector(d.selector),this.formContainer=this.element.querySelector(d.formSelector),this.cardsContainer=this.element.querySelector(d.cardsSelector);new n(this.formContainer).bindToDOM();new l(this.cardsContainer).bindToDOM()}static get formSelector(){return".form-container"}static get cardsSelector(){return".cards-container"}static get selector(){return".widget"}static get markup(){return"\n      <div class='widget'>\n        <h3>Check your credit card number</h3>\n        <div class='form-container'></div>\n        <div class='cards-container'></div>\n      </div>\n    "}}class u{constructor(t){if(!(t instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=t}bindToDOM(){this.container.innerHTML=u.markUp,this.widgetContainer=this.container.querySelector(u.widgetSelector),this.tableContainer=this.container.querySelector(u.tableSelector);new d(this.widgetContainer).bindToDOM();new e(this.tableContainer).bindToDOM()}static get markUp(){return'\n      <div class="headmast">\n        <h2>Validate Credit Card Numbers</h2>\n        <h3>Check a credit card number with our online checker!</h3>\n        <div class="widget-container"></div>\n        <div class="table-container"></div>\n      </div>\n    '}static get widgetSelector(){return".widget-container"}static get tableSelector(){return".table-container"}}const m=document.querySelector("#card-validator-container");new u(m).bindToDOM()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,